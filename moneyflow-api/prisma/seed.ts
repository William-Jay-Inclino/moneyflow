import { PrismaClient, CategoryType } from '@prisma/client';

const prisma = new PrismaClient();

const categoryDefaults = [
  // Income categories - common ones marked as default
  { name: 'Salary / Wages', type: CategoryType.INCOME, color: '#58D68D', icon: 'üíº', is_default: true },
  { name: 'Freelance', type: CategoryType.INCOME, color: '#AF7AC5', icon: 'üíª', is_default: true },
  { name: 'Investment', type: CategoryType.INCOME, color: '#F4D03F', icon: 'üìà', is_default: true },
  { name: 'Business', type: CategoryType.INCOME, color: '#52C41A', icon: 'üè¢', is_default: false },
  { name: 'Rental Income', type: CategoryType.INCOME, color: '#85C1E9', icon: 'üè†', is_default: false },
  { name: 'Dividends', type: CategoryType.INCOME, color: '#5DADE2', icon: 'üí∞', is_default: false },
  { name: 'Bonus', type: CategoryType.INCOME, color: '#82E0AA', icon: 'üéÅ', is_default: true },
  { name: 'Commission', type: CategoryType.INCOME, color: '#F8C471', icon: 'ü§ù', is_default: false },
  { name: 'Royalties', type: CategoryType.INCOME, color: '#BB8FCE', icon: 'üëë', is_default: false },
  { name: 'Side Hustle', type: CategoryType.INCOME, color: '#F7DC6F', icon: 'üî•', is_default: false },
  { name: 'Pension', type: CategoryType.INCOME, color: '#98D8C8', icon: 'üë¥', is_default: false },
  { name: 'Grants', type: CategoryType.INCOME, color: '#85C1E9', icon: 'üéØ', is_default: false },
  { name: 'Cashback', type: CategoryType.INCOME, color: '#58D68D', icon: 'üí≥', is_default: true },
  { name: 'Gifts Received', type: CategoryType.INCOME, color: '#F8C471', icon: 'üéÄ', is_default: false },
  { name: 'Savings Interest', type: CategoryType.INCOME, color: '#40E0D0', icon: 'üè¶', is_default: true },
  { name: 'Other Income', type: CategoryType.INCOME, color: '#95A5A6', icon: 'üíé', is_default: false },

  // Expense categories - common ones marked as default
  { name: 'Food & Dining', type: CategoryType.EXPENSE, color: '#FF6B6B', icon: 'üçΩÔ∏è', is_default: true },
  { name: 'Transportation', type: CategoryType.EXPENSE, color: '#4ECDC4', icon: 'üöó', is_default: true },
  { name: 'Entertainment', type: CategoryType.EXPENSE, color: '#85C1E9', icon: 'üé¨', is_default: true },
  { name: 'Utilities', type: CategoryType.EXPENSE, color: '#96CEB4', icon: '‚ö°', is_default: true },
  { name: 'Shopping', type: CategoryType.EXPENSE, color: '#BB8FCE', icon: 'üõçÔ∏è', is_default: true },
  { name: 'Healthcare', type: CategoryType.EXPENSE, color: '#98D8C8', icon: 'üè•', is_default: false },
  { name: 'Education', type: CategoryType.EXPENSE, color: '#F7DC6F', icon: 'üìö', is_default: false },
  { name: 'Insurance', type: CategoryType.EXPENSE, color: '#F7DC6F', icon: 'üõ°Ô∏è', is_default: false },
  { name: 'Groceries', type: CategoryType.EXPENSE, color: '#45B7D1', icon: 'üõí', is_default: true },
  { name: 'Gas & Fuel', type: CategoryType.EXPENSE, color: '#82E0AA', icon: '‚õΩ', is_default: true },
  { name: 'Home & Garden', type: CategoryType.EXPENSE, color: '#FFEAA7', icon: 'üè°', is_default: false },
  { name: 'Personal Care', type: CategoryType.EXPENSE, color: '#DDA0DD', icon: 'üíÖ', is_default: false },
  { name: 'Fitness & Sports', type: CategoryType.EXPENSE, color: '#F8C471', icon: 'üèãÔ∏è', is_default: false },
  { name: 'Travel', type: CategoryType.EXPENSE, color: '#85C1E9', icon: '‚úàÔ∏è', is_default: false },
  { name: 'Subscriptions', type: CategoryType.EXPENSE, color: '#DDA0DD', icon: 'üì∫', is_default: true },
  { name: 'Phone & Internet', type: CategoryType.EXPENSE, color: '#4ECDC4', icon: 'üì±', is_default: true },
  { name: 'Banking & Fees', type: CategoryType.EXPENSE, color: '#96CEB4', icon: 'üè¶', is_default: false },
  { name: 'Taxes', type: CategoryType.EXPENSE, color: '#98D8C8', icon: 'üìã', is_default: false },
  { name: 'Gifts & Donations', type: CategoryType.EXPENSE, color: '#F8C471', icon: 'üéÅ', is_default: false },
  { name: 'Other Expenses', type: CategoryType.EXPENSE, color: '#D5DBDB', icon: 'üì¶', is_default: false },
];

async function main() {
  console.log('üå± Seeding category defaults...');

  // Clear existing data
  await prisma.category.deleteMany();

  // Insert new data
  for (const category of categoryDefaults) {
    await prisma.category.create({
      data: category,
    });
  }

  console.log('‚úÖ Category defaults seeded successfully!');
  console.log(`üìä Created ${categoryDefaults.length} default categories`);
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error('‚ùå Error seeding data:', e);
    await prisma.$disconnect();
    process.exit(1);
  });
