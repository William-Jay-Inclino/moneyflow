generator client {
	provider = "prisma-client-js"
	output   = "../generated/prisma"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

model User {
	id            String   @id @default(uuid()) @db.Uuid
	username      String   @unique
	email         String   @unique
	is_active     Boolean  @default(true)
	registered_at DateTime @default(now()) @db.Timestamptz

	// Relations
	user_expense_categories UserExpenseCategory[]
	user_income_categories  UserIncomeCategory[]
	user_expenses           UserExpense[]
	user_income             UserIncome[]

	@@index([is_active])
	@@index([registered_at])
	@@map("users")
}

model CategoryDefault {
	id    Int          @id @default(autoincrement())
	name  String
	type  CategoryType
	color String

	@@index([type])
	@@index([name])
	@@map("category_defaults")
}

enum CategoryType {
	INCOME
	EXPENSE
}

model UserExpenseCategory {
	id      Int    @id @default(autoincrement())
	user_id String @db.Uuid
	name    String

	// Relations
	user          User          @relation(fields: [user_id], references: [id], onDelete: Cascade)
	user_expenses UserExpense[]

	@@index([user_id])
	@@unique([user_id, name])
	@@map("user_expense_categories")
}

model UserIncomeCategory {
	id      Int    @id @default(autoincrement())
	user_id String @db.Uuid
	name    String

	// Relations
	user        User         @relation(fields: [user_id], references: [id], onDelete: Cascade)
	user_income UserIncome[]

	@@index([user_id])
	@@unique([user_id, name])
	@@map("user_income_categories")
}

model UserExpense {
	id          String   @id @default(uuid()) @db.Uuid
	user_id     String   @db.Uuid
	created_at  DateTime @default(now()) @db.Timestamptz
	category_id Int
	cost        Decimal  @db.Decimal(10, 2)
	notes       String?

	// Relations
	user     User                @relation(fields: [user_id], references: [id], onDelete: Cascade)
	category UserExpenseCategory @relation(fields: [category_id], references: [id], onDelete: Restrict)

	@@index([user_id])
	@@index([user_id, created_at])
	@@index([category_id])
	@@index([created_at])
	@@index([cost])
	@@map("user_expenses")
}

model UserIncome {
	id          String   @id @default(uuid()) @db.Uuid
	user_id     String   @db.Uuid
	created_at  DateTime @default(now()) @db.Timestamptz
	category_id Int
	amount      Decimal  @db.Decimal(10, 2)
	notes       String?

	// Relations
	user     User               @relation(fields: [user_id], references: [id], onDelete: Cascade)
	category UserIncomeCategory @relation(fields: [category_id], references: [id], onDelete: Restrict)

	@@index([user_id])
	@@index([user_id, created_at])
	@@index([category_id])
	@@index([created_at])
	@@index([amount])
	@@map("user_income")
}


